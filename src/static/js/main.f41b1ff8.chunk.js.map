{"version":3,"sources":["../frontend/src/index.js","../frontend/src/components.js"],"names":["getNewTokenThen","callback","fetch","then","response","status","json","data","access_token","console","log","catch","e","spotifyAccessToken","method","headers","playlistsData","items","Playlists","id","map","playlist","imageURL","images","url","name","description","className","style","backgroundImage","ReactDOM","render","document","getElementById"],"mappings":"mMAwDaA,EAAkB,SAAUC,GAEvCC,MAAM,mCAAoC,IAAIC,MAC5C,SAACC,GACC,GAAwB,MAApBA,EAASC,OAEX,OADWD,EAASE,UAKxBH,MAAK,SAACI,GACN,IAAIC,EAAeD,EAAI,aAEvB,OADAE,QAAQC,IAAIF,GACLA,KACNL,MAAK,SAACK,GACPP,EAASO,MACRG,OACD,SAACC,GACCH,QAAQC,IAAIE,OAMlBZ,GAzEuB,SAAUa,GAE/BX,MAAM,oCAAD,OAJQ,4BAIR,cAAyD,CAC5DY,OAAQ,MACRC,QAAS,CACP,cAAgB,UAAhB,OAA2BF,MAI5BV,MAAK,SAACC,GACP,GAAwB,MAApBA,EAASC,OAEX,OADAI,QAAQC,IAAI,QACLN,EAASE,OACa,MAApBF,EAASC,SAClBQ,EAAqBb,IAErBS,QAAQC,IAAI,WAEbP,MACD,SAACI,GACC,IAAIS,EAAgBT,EAAKU,MACzBR,QAAQC,IAAIM,GAEZ,IAAME,EAAY,WAChB,OACE,qBAAKC,GAAI,iBAAT,SACIH,EAAcI,KAAI,SAAAC,GAAQ,OAC1B,+BC/BwBC,EDgCRD,EAASE,OAAO,GAAGC,IChCDC,EDgCMJ,EAASI,KChCTC,EDgCeL,EAASK,YAAaL,EAASF,GC9B5F,sBAAKQ,UAAW,qBAAhB,UACI,qBAAKA,UAAW,wBAAyBC,MAAQ,CAACC,gBAAgB,OAAD,OAAQP,EAAR,QACjE,mBAAGK,UAAW,gBAAd,SAAgCF,IAChC,mBAAGE,UAAW,uBAAd,SAAuCD,IACvC,wBAAQC,UAAW,gBAAnB,yBANgB,IAAUL,EAAUG,EAAMC,QDwChDI,IAASC,OACP,cAACb,EAAD,IACAc,SAASC,eAAe,YAM5BtB,OAAM,SAACC,GACPH,QAAQC,IAAIE,U","file":"static/js/main.f41b1ff8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PlaylistCard } from './components'\n\nconst userID = \"nk0b80ekcsiwcpht16mym9gzr\"\n\nconst fetchPlaylists = function (spotifyAccessToken) {\n  //fetching the list of playlists from spotify but only after receiving the access token\n  fetch(`https://api.spotify.com/v1/users/${userID}/playlists`, {\n    method: \"GET\",\n    headers: {\n      'Authorization': `Bearer ${spotifyAccessToken}`,\n\n\n    }\n  }).then((response) => {\n    if (response.status === 200) {\n      console.log(\"good\")\n      return response.json()\n    } else if (response.status === 401) {\n      spotifyAccessToken = getNewTokenThen()\n\n      console.log(\"bad\")\n    }\n  }).then(\n    (data) => {\n      let playlistsData = data.items\n      console.log(playlistsData)\n\n      const Playlists = function () {\n        return (\n          <div id= \"playlists-grid\">\n            { playlistsData.map(playlist=>(\n              <div>\n                {PlaylistCard(playlist.images[0].url, playlist.name, playlist.description, playlist.id)}\n              </div>\n            )  ) }\n          </div>\n        )\n        \n      }\n\n      ReactDOM.render(\n        <Playlists></Playlists>,\n        document.getElementById('root')\n      );\n\n\n    }\n\n  ).catch((e) => {\n    console.log(e)\n  })\n}\n\nexport const getNewTokenThen = function (callback) {\n  //getting new token then passing it to a callback, so that fetchPlaylists can access the token\n  fetch('http://127.0.0.1:8000/spotifyapi', {}).then(\n    (response) => {\n      if (response.status === 200) {\n        let data = response.json()\n        return data\n      }\n\n    }\n  ).then((data) => {\n    let access_token = data[\"access_token\"]\n    console.log(access_token)\n    return access_token\n  }).then((access_token) => {\n    callback(access_token)\n  }).catch(\n    (e) => {\n      console.log(e)\n\n    }\n  )\n}\n\ngetNewTokenThen(fetchPlaylists)\n\n\n","import React from 'react';\r\n\r\n\r\nexport const PlaylistCard = function (imageURL, name, description, id){\r\n    return (\r\n        <div className={\"playlist-container\"}>\r\n            <div className={\"cover-image-container\"} style={ {backgroundImage:`url(${imageURL})`}}></div>\r\n            <p className={\"playlist-name\"}>{name}</p>\r\n            <p className={\"playlist-description\"}>{description}</p>\r\n            <button className={\"follow-button\"}>Add +</button>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}